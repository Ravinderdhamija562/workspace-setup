# Enable Powerlevel10k instant prompt.
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh" || true
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="bira"
plugins=(aws kube-ps1 terraform git git-prompt colorize kubectl gcloud z fzf fzf-tab zsh-syntax-highlighting zsh-autosuggestions)
#plugins=(aws kube-ps1)

source $ZSH/oh-my-zsh.sh

autoload -Uz compinit
compinit
#
HOSTNAME=$(hostname)

case "$HOSTNAME" in
  "CT4WL2KYTX")
    custom_paths="/Users/ravinderk/NeverDelete/scripts:/opt/homebrew/opt/openjdk@17/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/opt/homebrew/anaconda3/bin"
    export PATH="$custom_paths:$PATH"
    # export PYENV_ROOT="$HOME/.pyenv"
    # [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
    # eval "$(pyenv init -)"
    if [ -f '/Users/ravinderk/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/ravinderk/Downloads/google-cloud-sdk/path.zsh.inc'; fi
    tabset --color black
    # Enable GCP VM ssh
    if ! pgrep -f "start-iap-tunnel rk-bastion-server 22 --zone=us-west1-b --local-host-port=localhost:2220" > /dev/null; then
      gcloud compute start-iap-tunnel rk-bastion-server 22 --zone=us-west1-b --local-host-port=localhost:2220 &
    fi
    ;;
  "G-U22")
    export PATH="$PATH:~/.local/bin/:~/maven/apache-maven-3.9.9/bin"
    export PYENV_ROOT="$HOME/.pyenv"
    # [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
    # eval "$(pyenv init -)"
    tabset --color green
    ;;
esac

# export CLOUDSDK_PYTHON_SITEPACKAGES=1

bindkey '[[C' forward-word
bindkey '[[D' backward-word

# Set KUBECONFIG
kubeconfig_files=$(find ~/.nsk -type f \( -name "*.yaml" -o -name "*.yml" \) 2>/dev/null | tr '\n' ':')
if [[ -n "$kubeconfig_files" ]]; then
  export KUBECONFIG="$kubeconfig_files:${HOME}/.kube/config"
else
  export KUBECONFIG="${HOME}/.kube/config"
fi

function set_custom_prompt() {
  local env os prompt_host prompt_os custom_prompt

  SHORT_HOSTNAME=$(hostname -s)

  if [ -f /etc/os-release ]; then
    OS_NAME=$(grep "^NAME=" /etc/os-release | cut -d= -f2 | tr -d '"')
    OS_VERSION=$(grep "^VERSION_ID=" /etc/os-release | cut -d= -f2 | tr -d '"')
  else
    OS_NAME=""
    OS_VERSION=""
  fi

  if [[ "$OS_NAME" == "Ubuntu" ]]; then
    OS_NAME="UB"
  fi

  prompt_host="%{$fg[blue]%}${SHORT_HOSTNAME}%{$reset_color%}"
  prompt_os=""
  if [[ -n "$OS_NAME" ]]; then
    prompt_os="${OS_NAME}${OS_VERSION}"
  fi

  if [[ -n "$env" ]]; then
    if [[ -n "$prompt_os" ]]; then
      custom_prompt="${prompt_host}-${prompt_os}"
    else
      custom_prompt="${prompt_host}"
    fi
  else
    if [[ -n "$prompt_os" ]]; then
      custom_prompt="${prompt_host}-${prompt_os}"
    else
      custom_prompt="${prompt_host}"
    fi
  fi

  PROMPT="╭─%{$fg[red]%}$custom_prompt %"
  PROMPT+=' $(kube_ps1)'
  PROMPT+=' $(git_super_status)%{$reset_color%}'
  PROMPT_CWD="%{$fg[red]%}(%~)%{$reset_color%}"
  PROMPT+='$PROMPT_CWD'
  PROMPT+=$'\n╰─ ➜ '
}


set_custom_prompt

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=6'
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

alias fed-prod="tsh login --proxy=teleport-iad3.govskope.io"
alias fed-preprod="tsh login --proxy=teleport.betagovskope.io"
alias pbmm="tsh login --proxy=teleport.cagovskope.io"

typeset -U PATH # Ensure unique paths

